DROP TABLE IF EXISTS v_experiment_stats;
CREATE TABLE v_experiment_stats(machineid, datasetid, queryid, compilerid, layoutid, implementationid, timeid, runtimes);
SELECT machineid, datasetid, queryid, compilerid, layoutid, implementationid, timeid, GRUBBS_FILTER(ARRAY(runtime)) as runtimes 
  INTO v_experiment_stats
  FROM fact_experiment
  GROUP BY machineid, datasetid, queryid, compilerid, layoutid, implementationid, timeid;
--SELECT * FROM v_experiment_stats;

--v_experiment_stats_outliers_removed is omitted because all unneccesary data is removed before

DROP TABLE IF EXISTS v_experiment_stats_latest;
CREATE TABLE v_experiment_stats_latest(machineid, datasetid, queryid, compilerid, layoutid, implementationid, timeid, avg_runtime, stdev_runtime, margin_of_error_runtime, runtimes);
SELECT machineid, datasetid, queryid, compilerid, layoutid, implementationid, timeid, MEAN(runtimes) AS avg_runtime, STDDEV_SAMP(runtimes) AS stdev_runtime, MARGIN_OF_ERROR(runtimes) AS margin_of_error_runtime, runtimes 
  INTO v_experiment_stats_latest
  FROM v_experiment_stats;
--SELECT * FROM v_experiment_stats_latest;

DROP TABLE IF EXISTS v_problem_tmp;
CREATE TABLE v_problem_tmp(machineid, datasetid, queryid, min_interval);
SELECT machineid, datasetid, queryid, MIN(avg_runtime - margin_of_error_runtime) as min_interval
  INTO v_problem_tmp
  FROM v_experiment_stats_latest
  GROUP BY machineid, datasetid, queryid;
--SELECT * FROM v_problem_tmp
  
DROP TABLE IF EXISTS v_problem_minimal;
CREATE TABLE v_problem_minimal(machineid, datasetid, queryid, compilerid, layoutid, implementationid, runtimes, avg_runtime, margin_of_error_runtime);
SELECT * 
  INTO v_problem_minimal
  FROM v_problem_tmp v 
  JOIN v_experiment_stats_latest l 
  ON (v.machineid = l.machineid AND v.datasetid = l.datasetid AND v.queryid = l.queryid) 
  WHERE avg_runtime - margin_of_error_runtime = min_interval;
--SELECT * FROM v_problem_minimal;

DROP TABLE IF EXISTS v_problem_compare2best;
CREATE TABLE v_problem_compare2best(machineid, datasetid, queryid, compilerid, layoutid, implementationid, confidence_interval, confidence_interval_best, runtimes, best_runtimes);
SELECT vl.machineid, vl.datasetid, vl.queryid, vl.compilerid, vl.layoutid, vl.implementationid, ((vl.avg_runtime - vl.margin_of_error_runtime) + ', ' + (vl.avg_runtime + vl.margin_of_error_runtime)) AS confidence_interval, ((vb.avg_runtime - vb.margin_of_error_runtime) + ', ' + (vb.avg_runtime + vb.margin_of_error_runtime)) as confidence_interval_best, vl.runtimes, vb.runtimes AS best_runtimes
  INTO v_problem_compare2best
  FROM v_experiment_stats_latest vl 
  JOIN v_problem_minimal vb
  ON (vb.machineid = vl.machineid AND vb.datasetid = vl.datasetid AND vb.queryid = vl.queryid);
SELECT * FROM v_problem_compare2best;
